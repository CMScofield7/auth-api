services: # Serviço do backend
  backend: # Serviço do backend onde vai rodar a API em NestJS
    build: . # Faz com que o Docker construa a imagem do backend a partir do Dockerfile que está no diretório atual (.)
    container_name: auth-api # Nome do container que vai ser criado para o backend
    ports: # Portas que o backend vai escutar
      - '3050:3000'

    environment: # Variáveis de ambiente
      - JWT_SECRET=${JWT_SECRET} # Chave secreta do JWT
      - DB_HOST=${DB_HOST} # Nome do container do banco de dados
      - DB_PORT=${DB_PORT} # Porta padrão do PostgreSQL
      - DB_USER=${DB_USER} # Usuário padrão do PostgreSQL
      - DB_PASSWORD=${DB_PASSWORD} # Senha padrão do PostgreSQL
      - DB_DATABASE=${DB_DATABASE} # Nome do banco de dados que vai ser criado
      - REDIS_HOST='redis' # Nome do container do Redis
      - REDIS_PORT=6379 # Porta padrão do Redis

    volumes: # Volumes que o backend vai usar
      - .:/app # Volume para armazenar os arquivos do backend

    depends_on:
      - postgres # Faz com que o backend dependa do banco de dados para rodar corretamente
      - redis # Faz com que o backend dependa do Redis para rodar corretamente

    networks:
      - auth-network

  postgres: # Serviço do banco de dados
    image: postgres # Imagem do banco de dados
    container_name: postgres-db # Nome do container que vai ser criado para o banco de dados
    ports: # Portas que o banco de dados vai escutar
      - '5432:5432'
    environment: # Variáveis de ambiente
      - POSTGRES_USER=${DB_USER} # Usuário padrão do PostgreSQL
      - POSTGRES_PASSWORD=${DB_PASSWORD} # Senha padrão do PostgreSQL
      - POSTGRES_DB=${DB_DATABASE} # Nome do banco de dados que vai ser criado

    volumes: # Volumes que o banco de dados vai usar
      - postgres-data:/var/lib/postgresql/data # Volume para armazenar os dados do banco de dados

    networks:
      - auth-network

  redis: # Serviço do Redis
    image: redis # Imagem do Redis
    container_name: redis # Nome do container que vai ser criado para o Redis
    ports: # Portas que o Redis vai escutar
      - '6379:6379'

    volumes: # Volumes que o Redis vai usar
      - redis-data:/data # Volume para armazenar os dados do Redis
    command: ['redis-server', '--appendonly', 'yes']

    networks:
      - auth-network

volumes: # Volumes que o banco de dados vai usar
  postgres-data: # Volume para armazenar os dados do banco de dados
    driver: local # Driver para armazenar os dados do banco de dados. "local" significa que o banco de dados vai ser armazenado na pasta "postgres-data"

  redis-data: # Volume para armazenar os dados do Redis
    driver: local # Driver para armazenar os dados do Redis. "local" significa que o Redis vai ser armazenado na pasta "redis-data"

networks: # Redes que o backend vai usar
  auth-network: # Rede para o backend
    driver: bridge
